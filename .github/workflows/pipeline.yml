name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs: # https://stackoverflow.com/questions/59175332/using-output-from-a-previous-job-in-a-new-one-in-a-github-action
      Version: ${{ steps.gitversion.outputs.nuGetVersionV2 }}
      CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}  
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 #fetch-depth is needed for GitVersion
        
    #Install and calculate the new version with GitVersion  
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3.0.0
      with:
        versionSpec: '5.x'
    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v3.0.0
      id: gitversion # step id used as reference for output values
    - name: Display GitVersion outputs
      run: |
        echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
        echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"
        echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"
    
    #Build the docx book from the MD files
    - name: reorder the files first
      run: |
        mv README.md 00Contents.md 
        rm 00-Outline.md
    - name: create file list
      id: files_list
      run: |
          echo "::set-output name=files::$(printf '"%s" ' *.md)"
    - uses: docker://pandoc/core:2.9
      with:
        args: ${{ steps.files_list.outputs.files }} --to=docx --output=SoftwareAdvice.docx 
        #--toc --standalone # --extract-media=. # --standalone # --extract-media=imagesOutput #--from=gfm --standalone 
    - uses: actions/upload-artifact@master
      with:
        name: drop
        path: SoftwareAdvice.docx

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4.1.8
      with:
        name: drop  
    - name: Display GitVersion outputs
      run: |
        echo "Version: ${{ needs.build.outputs.Version }}" 
        echo "CommitsSinceVersionSource: ${{ needs.build.outputs.CommitsSinceVersionSource }}" 
    - name: Create Release
      uses: ncipollo/release-action@v1
      if: needs.build.outputs.CommitsSinceVersionSource > 0 #Only create a release if there has been a commit/version change
      with:
        artifacts: drop/SoftwareAdvice.docx
        tag: ${{ needs.build.outputs.Version }}
        name: Release ${{ needs.build.outputs.Version }}
        token: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
